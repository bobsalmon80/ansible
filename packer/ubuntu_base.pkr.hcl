variable "sudo_user" {
  type = string
  default = ""
  sensitive = true
}

variable "sudo_password" {
  type =  string
  default = ""
  // Sensitive vars are hidden from output as of Packer v1.6.5
  sensitive = true
}

variable "proxmox_user" {
  type = string
  default = ""
  sensitive = true
}

variable "proxmox_password" {
  type = string
  default = ""
  sensitive = true
}

variable "proxmox_template_name" {
  type    = string
  default = "ubuntu-22.04"
}

variable "proxmox_vm_id" {
  type    = string
  default = "306"
}

variable "ubuntu_iso_file" {
  type    = string
  default = "ubuntu-22.04.2-live-server-amd64.iso"
}

variable "ansible_vars_file" {
    type    = string
    default = null
}

variable "ansible_ssh_ext_arg" {
    type    = string
    #default = null
    default = "-o StrictHostKeyChecking=no" # -o 'HostKeyAlgorithms=+ssh-rsa' -o 'PubkeyAcceptedKeyTypes=+ssh-rsa'"
}

#local "extra_args" {
#   expression = var.ansible_vars_file != null ? ["-e", "@extra_vars.yml", "-e", var.ansible_vars_file] : ["-e", "@extra_vars.yml"]
#}

# locals {
#   output_directory = "build/${legacy_isotime("2006-01-02-15-04-05")}"
# }

source "proxmox-iso" "autogenerated_1" { # Or use 'proxmox-clone' plagin for create clone tamplate
  cloud_init = true
  cloud_init_storage_pool = "local-lvm"
  boot_command = [
    "e<down><down><down><end><wait><bs><bs><bs><bs><wait>",
    "autoinstall ds=nocloud-net\\;s=http://{{ .HTTPIP }}:{{ .HTTPPort }}/ubuntu/",
    "<f10>"
  ]
  boot = "c"
  boot_wait = "5s"
  cores = 2
  qemu_agent = true
  disks {
    disk_size         = "20G"
    format            = "raw"
    storage_pool      = "local-lvm"
    storage_pool_type = "lvm"
    type              = "virtio"
  }
  http_directory   = "/home/smb/ansible/packer/http_root"
  http_bind_address = "192.168.101.3"
  http_port_min = 8802
  http_port_max = 8802
  iso_file         = "local:iso/ubuntu-22.04.2-live-server-amd64.iso"
  iso_storage_pool = "local"
  memory           = 2048
  network_adapters {
    bridge = "vmbr1"
    model = "virtio"
    mac_address = "00:00:00:00:00:01"
  }
  node            = "node5"
  password        = "${var.proxmox_password}"
  proxmox_url     = "https://192.168.101.2:8006/api2/json"
  scsi_controller = "virtio-scsi-pci"
  ssh_password    = "${var.sudo_password}"
  ssh_timeout     = "30m"
  ssh_username    = "${var.sudo_user}"
  ssh_host        = "10.55.0.50"
  template_name   = "${var.proxmox_template_name}"
  unmount_iso     = true
  username        = "${var.proxmox_user}"
  vm_id           = "${var.proxmox_vm_id}"
}

build {
    name = "ubuntu_server"
    sources = ["source.proxmox-iso.autogenerated_1"]
    # provisioner "shell" {
    #   inline = [
    #      "while [ ! -f /var/lib/cloud/instance/boot-finished ]; do echo 'Waiting for cloud-init...'; sleep 1; done"]   
    #}
    provisioner "shell-local" {
      inline = ["echo hi, ${var.sudo_user}, ${var.ansible_ssh_ext_arg}"]
    }
    provisioner "breakpoint" {
      disable = false
      note    = "this is a breakpoint"
    }
    provisioner "shell-local" {
      inline = ["ssh -fN -R 3128 10.55.0.50"] #  НУЖНО СДЕЛАТЬ ТУНЕЛЬ БЕЗ СЕАНСА
    }
    provisioner "shell-local" {
      inline = ["echo hi 2"]
    } 
    provisioner "breakpoint" {
      disable = false
      note    = "this is a breakpoint"
    }
    provisioner "ansible" {
      command = "ansible-playbook"
      #extra_arguments = [
      #  "--inventory-file=/home/smb/ansible/playbooks/hosts2 -vvv"
      #]
      #ansible_env_vars = [ # РАБОЧИЙ БЛОК
      #  "ANSIBLE_SSH_ARGS=-R 3128"
        #"ANSIBLE_SSH_ARGS=-R 3128 -o StrictHostKeyChecking=no -o PubkeyAcceptedKeyTypes=+ssh-rsa -o HostkeyAlgorithms=+ssh-rsa"
        #"ANSIBLE_SSH_ARGS=-R 3128"
      #]
      playbook_file = "/home/smb/ansible/playbooks/usrv-pkr-update.yml" # "/home/smb/ansible/playbooks/base_tamplate_preset.yml"
      inventory_file = "/home/smb/ansible/playbooks/hosts2"
      #use_proxy = false
      ssh_authorized_key_file = "/home/smb/.ssh/smb_dmz151_ed25519.pub"
      # groups = [
      #   "All"
      # ]
      # host_alias = "usrv"
      # user = "${var.sudo_user}"
      # inventory_file_template = "controller ansible_host={{ .Host }} ansible_user={{ .User }} ansible_port={{ .Port }}\n"
      # extra_arguments = local.extra_args
      # ssh_host_key_file = ""
      # ansible_proxy_key_type = "ECDSA"
      # ssh_authorized_key_file = "/home/smb/.ssh/smb_dmz151_ed25519"
      # ansible_ssh_extra_args = [ #РАБОЧИЙ БЛОК
      #  "-o HostKeyAlgorithms=+ssh-rsa' ",
      #  "'-o PubkeyAcceptedKeyTypes=+ssh-rsa"
      # ] #["-R 3128", "-o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedKeyTypes=+ssh-rsa"]
      
      #ansible_ssh_extra_args = [
      #  "${var.ansible_ssh_ext_arg}"
      # "-o HostKeyAlgorithms=+ssh-rsa -o PubkeyAcceptedKeyTypes=+ssh-rsa -o IdentitiesOnly=yes"
      #]
      #extra_arguments = [
      #  "--scp-extra-args", 
      #  "'-O'",
      #  "-vvv"
      #]
    }
    provisioner "shell-local" {
      inline = ["echo hi 3"]
    }
    provisioner "breakpoint" {
      disable = false
      note    = "this is a breakpoint"
    }
}
